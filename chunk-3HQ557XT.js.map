{
  "version": 3,
  "sources": ["projects/showcase/src/app/demo/examples/ngx-custom-control.component.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  AttributionControlDirective,\n  ControlComponent,\n  FullscreenControlDirective,\n  GeolocateControlDirective,\n  MapComponent,\n  NavigationControlDirective,\n  Position,\n  ScaleControlDirective,\n} from '@maplibre/ngx-maplibre-gl';\n\n@Component({\n  selector: 'showcase-demo',\n  template: `\n    <mgl-map\n      [style]=\"\n        'https://api.maptiler.com/maps/streets/style.json?key=get_your_own_OpIi9ZULNHzrESv6T2vL'\n      \"\n      [canvasContextAttributes]=\"{preserveDrawingBuffer: true}\"\n    >\n      @if (visible) {\n        <mgl-control>\n          <button\n            mat-fab\n            color=\"primary\"\n            class=\"custom-control\"\n            data-cy=\"custom-control\"\n            (click)=\"alert('Hello')\"\n          >\n            Hello\n          </button>\n        </mgl-control>\n        <mgl-control mglAttribution position=\"top-right\"></mgl-control>\n        <mgl-control mglFullscreen position=\"top-right\"></mgl-control>\n        <mgl-control\n          mglGeolocate\n          position=\"top-right\"\n          (geolocate)=\"onGeolocate($event)\"\n        ></mgl-control>\n        <mgl-control mglNavigation position=\"top-right\"></mgl-control>\n        <mgl-control mglScale position=\"top-right\"></mgl-control>\n      }\n\n      <mgl-control position=\"bottom-right\">\n        <button\n          mat-flat-button\n          color=\"accent\"\n          (click)=\"toggleControls()\"\n          data-cy=\"toggle-show-controls\"\n        >\n          {{ visible ? 'Hide Controls' : 'Show Controls' }}\n        </button>\n      </mgl-control>\n    </mgl-map>\n  `,\n  styleUrls: ['./examples.css'],\n  imports: [\n    MapComponent,\n    ControlComponent,\n    MatButtonModule,\n    AttributionControlDirective,\n    FullscreenControlDirective,\n    GeolocateControlDirective,\n    NavigationControlDirective,\n    ScaleControlDirective,\n  ],\n})\nexport class NgxCustomControlComponent {\n  visible = true;\n\n  alert(message: string) {\n    alert(message);\n  }\n  onGeolocate(position: Position) {\n    console.log('geolocate', position);\n  }\n  toggleControls() {\n    this.visible = !this.visible;\n  }\n}\n"],
  "mappings": "kbAuBQA,EAAA,EAAA,aAAA,EAAa,EAAA,SAAA,CAAA,EAMTC,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,EAAA,OAAAC,EAASF,EAAAG,MAAM,OAAO,CAAC,CAAA,CAAA,EAEvBC,EAAA,EAAA,SAAA,EACFC,EAAA,EAAS,EAEXC,EAAA,EAAA,cAAA,CAAA,EAA+D,EAAA,cAAA,CAAA,EAE/DV,EAAA,EAAA,cAAA,CAAA,EAGEC,EAAA,YAAA,SAAAU,EAAA,CAAAT,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,EAAA,OAAAC,EAAaF,EAAAQ,YAAAD,CAAA,CAAmB,CAAA,CAAA,EACjCF,EAAA,EACDC,EAAA,EAAA,cAAA,CAAA,EAA8D,EAAA,cAAA,CAAA,GA4BtE,IAAaG,GAAyB,IAAA,CAAhC,MAAOA,CAAyB,CAxDtCC,aAAA,CAyDE,KAAAC,QAAU,GAEVR,MAAMS,EAAe,CACnBT,MAAMS,CAAO,CACf,CACAJ,YAAYK,EAAkB,CAC5BC,QAAQC,IAAI,YAAaF,CAAQ,CACnC,CACAG,gBAAc,CACZ,KAAKL,QAAU,CAAC,KAAKA,OACvB,iDAXWF,EAAyB,CAAA,+BAAzBA,EAAyBQ,UAAA,CAAA,CAAA,eAAA,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,yBAAA,EAAA,CAAA,WAAA,cAAA,EAAA,CAAA,kBAAA,GAAA,QAAA,SAAA,UAAA,uBAAA,EAAA,OAAA,EAAA,CAAA,UAAA,GAAA,QAAA,UAAA,UAAA,iBAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,GAAA,WAAA,WAAA,EAAA,CAAA,gBAAA,GAAA,WAAA,WAAA,EAAA,CAAA,eAAA,GAAA,WAAA,YAAA,EAAA,WAAA,EAAA,CAAA,gBAAA,GAAA,WAAA,WAAA,EAAA,CAAA,WAAA,GAAA,WAAA,WAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,IArDlC1B,EAAA,EAAA,UAAA,CAAA,EAME4B,EAAA,EAAAC,EAAA,EAAA,CAAA,EAuBA7B,EAAA,EAAA,cAAA,CAAA,EAAqC,EAAA,SAAA,CAAA,EAIjCC,EAAA,QAAA,UAAA,CAAA,OAAS0B,EAAAP,eAAA,CAAgB,CAAA,EAGzBZ,EAAA,CAAA,EACFC,EAAA,EAAS,EACG,SArCdqB,EAAA,wFAAA,EAGAC,EAAA,0BAAAC,EAAA,EAAAC,CAAA,CAAA,EAEAC,EAAA,EAAAC,EAAAR,EAAAZ,QAAA,EAAA,EAAA,EA8BImB,EAAA,CAAA,EAAAE,EAAA,IAAAT,EAAAZ,QAAA,gBAAA,gBAAA,GAAA,kBAONsB,EACAC,EACAC,EAAeC,EAAAC,EACfC,EACAC,EACAC,EACAC,EACAC,CAAqB,EAAAC,OAAA,CAAA;kDAAA,CAAA,CAAA,CAAA,SAGZlC,CAAyB,GAAA",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "alert", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275element", "$event", "onGeolocate", "NgxCustomControlComponent", "constructor", "visible", "message", "position", "console", "log", "toggleControls", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "NgxCustomControlComponent_Conditional_1_Template", "\u0275\u0275styleMap", "\u0275\u0275property", "\u0275\u0275pureFunction0", "_c0", "\u0275\u0275advance", "\u0275\u0275conditional", "\u0275\u0275textInterpolate1", "MapComponent", "ControlComponent", "MatButtonModule", "MatButton", "MatFabButton", "AttributionControlDirective", "FullscreenControlDirective", "GeolocateControlDirective", "NavigationControlDirective", "ScaleControlDirective", "styles"]
}
